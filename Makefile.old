QEMU := /usr/bin/qemu-system-i386

CC := /usr/local/i386elfgcc/bin/i386-elf-gcc
GDB := /usr/local/i386elfgcc/bin/i386-elf-gdb
LD := /usr/local/i386elfgcc/bin/i386-elf-ld

NASM := /usr/bin/nasm

CFLAGS := -g -ffreestanding -I. -std=c99

CSOURCES := $(wildcard kernel/*.c drivers/*.c)
CHEADERS := $(wildcard kernel/*.h drivers/*.h)

OBJ := ${CSOURCES:.c=.o}

BUILD := build
TARGET := os.bin

all: $(BUILD)/$(TARGET)

run: $(BUILD)/$(TARGET)
	$(QEMU) -drive format=raw,file=$(BUILD)/$(TARGET),index=0,if=floppy -boot b

debug: $(BUILD)/$(TARGET) $(BUILD)/kernel.elf
	$(QEMU) -s -S -drive format=raw,file=$(BUILD)/$(TARGET),index=0,if=floppy -boot b &
	${GDB} -ex "symbol-file $(BUILD)/kernel.elf" -ex "set arch i386" -ex "target remote localhost:1234" -ex "b kernel.c:entry" -ex "c"

clean:
	rm -rfv $(BUILD)/*

$(BUILD)/kernel.elf: $(BUILD)/entry.o $(patsubst %,$(BUILD)/%,$(notdir $(OBJ)))
	$(LD) -o $@ -Ttext 0x1000 $^ 

$(BUILD)/$(TARGET): $(BUILD)/boot.bin $(BUILD)/kernel.bin
	cat $^ > $(BUILD)/$(TARGET)

$(BUILD)/boot.bin: boot/boot.asm
	$(NASM) $< -f bin -o $@ -i boot/

$(BUILD)/kernel.bin: $(BUILD)/entry.o $(patsubst %,$(BUILD)/%,$(notdir $(OBJ)))
	$(LD) -o $@ -Ttext 0x1000 $^ --oformat binary

$(BUILD)/entry.o: kernel/entry.asm
	$(NASM) $< -f elf -o $@

$(patsubst %,$(BUILD)/%,$(notdir $(OBJ))): $(CSOURCES) $(CHEADERS)
	${CC} ${CFLAGS} -c $(filter %$(notdir $(basename $@)).c,$^) -o $@

.PHONY: all run debug clean
